[workspace]
channels = ["https://prefix.dev/conda-forge"]
name = "TEMPLATE"
platforms = ["linux-64"]
version = "0.1.0"

#### Base Bare Bones Environment

[dependencies] # Global dependencies across all environments
pip = ">=25.1.1,<26"
hatchling = ">=1.27.0,<2"
numpy = ">=1.26.4,<3"
matplotlib = ">=3.10.3,<4"
jupyter = ">=1.1.1,<2"
ipywidgets = ">=8.1.7,<9"

[feature.cpu]
[feature.cpu.dependencies]
python = "==3.11" # We define Python here to avoid conflicts with other features

[tasks]
gitmod = "git submodule update --init --recursive"
[target.unix.activation]
scripts = ["scripts/post-install.bash"] # pip  install the package in editable mode

#### All possible environment combinations
[environments]
cpu = { features = ["cpu"] } # All you need for bare-bones
test = { features = ["test", "cpu"] } # This environment is relied upon by default by the CI

## The following environment combinations are optional and can safely be removed if not needed.
gpu = { features = ["gpu", ] }
test-gpu = { features = ["gpu", "test", ] }
ros2-gpu = { features = [ "gpu", "ros2", ]}
ros2-cpu = { features = ["cpu", "ros2"]}
genesis-gpu = { features = ["gpu", "genesis"]}
genesis-ros2-gpu = { features = ["gpu", "genesis", "ros2", ]} # Advanced users ;)

# Isaac Lab is not yet compatible with the other environments, due to Python and Torch version conflicts
# use on it's own for now. See below for more info.
isaaclab = {features = ["isaaclab", ]}

# Now, for the other environment configurations.
# Feel free to ignore and delete features you don't need!

#### Test Environment----------------------------------------------------------------------------
# This environment is relied upon by default by the CI in .github/workflows/pre-commit.yml
[feature.test.dependencies]
pytest = ">=7.0.0"
pre-commit = ">=3.6.0"
[feature.test.tasks]
lint = "pre-commit run --all-files --show-diff-on-failure"
test = "python -m pytest test/* -v"

#### GPU Environment-----------------------------------------------------------------------------
[feature.gpu]
# Channels would go here.
[feature.gpu.system-requirements]
# Thank you to Matthew Feickert for the system requirements tip!
# https://pixi.sh/latest/workspace/system_requirements/
# https://matthewfeickert-talks.github.io/reproducible-ml-for-scientists-with-pixi-scipy-2025/cuda-conda
cuda   = "12"
[feature.gpu.dependencies]
python = "==3.11" # We define Python here to avoid conflicts with other features
# For a different CUDA version change here and the torch/torchvision versions below accordingly
# Or, use the included docker and develop scripts to get a virtualized compatible CUDA env
cuda-version = "==12.6"
pytorch-gpu = ">=2.7.0,<3"
torchvision = ">=0.22.0,<0.23.0"
imageio = ">=2.37.0,<3"
scikit-image = ">=0.25.2,<0.26"

[feature.gpu.pypi-dependencies]
# Special thank you to @MiroPsota for these wheels
# https://github.com/facebookresearch/pytorch3d/discussions/1752?
pytorch3d = { version = "==0.7.8+pt2.7.0cu126", index = "https://miropsota.github.io/torch_packages_builder" }

#### Genesis Simulation Environment------------------------------------------------------------
[feature.genesis.dependencies]
numpy = "==1.26.4" # otherwise, genesis complains:
pyopengl="*"
[feature.genesis.pypi-dependencies]
PyOpenGL_accelerate = "*"
genesis-world = { git = "https://github.com/Genesis-Embodied-AI/Genesis.git", tag = "ec40996d4959d9a347e03c1a2ae63a27089d3952" }
# genesis-world = ">=0.2.1, <0.3" # Only available built wheels at the moment, for a more stable release
[feature.genesis.target.unix.activation]
scripts = ["scripts/config-genesis.bash"]

#### ROS 2 Environment---------------------------------------------------------------------------
[feature.ros2]
# "https://prefix.dev/robostack-[humble|jazzy|kilted]"
channels = ["https://prefix.dev/robostack-humble", "https://prefix.dev/conda-forge", ]
[feature.ros2.dependencies]
# For minimal dep set
ros-humble-ros-core	= "*"
# For full feature set
ros-humble-rviz2 = "*"
ros-humble-rosbag2 = "*"
ros-humble-rosbag2-storage-mcap = "*"

compilers = "*"
cmake = "*"
pkg-config = "*"
make = "*"
ninja = "*"

colcon-common-extensions = "*" # needed for using ros2_ws/colcon-defaults.yaml
colcon-mixin = "*"

# " error: option --editable not recognized for setuptools==80.1.0 " occurs for building ROS 2 Humble Python Packages
setuptools = ">=59.6.0,<=79.0.1"

[feature.ros2.tasks]
bag = "ros2 bag record -s mcap --all"
build-ros = "colcon build"
[feature.ros2.target.unix.activation]
scripts = ["ros2_ws/install/setup.bash", "scripts/config-ros2-colcon.bash"]

### Isaac Sim Environment-----------------------------------------------------------------------
# Warning; not as compatible as the other environments; use with caution
# Once Isaac Sim is updated to Python 3.11, it will be compatible with all other environments ;)
# Latest Isaac Sim wheel is still Python 3.10 and Torch 2025
[feature.isaaclab]
[feature.isaaclab.dependencies]
python = "==3.10"
cmake = ">3.6"
conda-build = "*"
pytorch-gpu = "==2.7.0"
torchvision = "==0.22.0"
[feature.isaaclab.system-requirements]
cuda   = "12"
[feature.isaaclab.pypi-dependencies]
# isaacsim = { version = "==4.5.0", index = "https://pypi.nvidia.com" }
# If we try to add it as a pypi dependency, it fails to resolve the deps
# Because isaacsim[all] has no wheels with a matching platform tag (e.g., `manylinux_2_28_x86_64`) we can conclude that your requirements are unsatisfiable.
# hint: Wheels are available for `isaacsim` (v4.5.0.0) on the following platforms: `manylinux_2_34_x86_64`, `win_amd64`
[feature.isaaclab.tasks] # Isaac Sim specific tasks
# https://isaac-sim.github.io/IsaacLab/main/source/setup/installation/pip_installation.html
install-isaaclab = "bash scripts/install-isaaclab.bash"
